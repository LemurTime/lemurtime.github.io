<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Sardine Blog</title>
<link>https://your-website-url.example.com/</link>
<atom:link href="https://your-website-url.example.com/index.xml" rel="self" type="application/rss+xml"/>
<description>A blog about schools of thought</description>
<generator>quarto-1.8.25</generator>
<lastBuildDate>Sat, 01 Nov 2025 04:00:00 GMT</lastBuildDate>
<item>
  <title>Writing Haiku with GPT-2 Without Finetuning</title>
  <dc:creator>Matthew Pagett</dc:creator>
  <link>https://your-website-url.example.com/posts/haiku-20251029/</link>
  <description><![CDATA[ 





<p><strong>The early days of LLMs</strong></p>
<p>Six years ago, ChatGPT didn’t exist, and LLMs weren’t reasoning or doing people’s homework, but they were thrilling all the same. My machine learning journey started in 2018 - I was in South Sudan and trying to use AI to count cows from space. By late 2019, I was living in Madagascar, and bought a Jetson Nano to run ML models without depending on an internet connection. As a literature PhD, I wanted to see how well the LLM could generate creative work, and the haiku seemed like a good test case.</p>
<p>Around that time, some excellent GPT-2 haiku projects (such as https://github.com/brianweet/gpt-2-haiku) used fine-tuning to generate interesting results. The Jetson Nano didn’t have enough memory to fine-tune the model, so I experimented with the base model using inference alone.</p>
<p>I wrote code which prompted GPT-2 with a haiku-themed seed and then pieced together output of the right syllable count. Each poem took about one minute to generate, appearing upon a small external monitor until the next one was finished - an ephemeral dance accompanied by the furious spinning of the fan. The results were mostly absurd, but occasionally interesting.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://your-website-url.example.com/posts/haiku-20251029/Revisiting haiku generator_files/figure-html/5244627d-620f-4379-8d1b-5dd08b498921-1-5e1d9fb0-34c3-4e87-a03f-49537a3ab91a.JPG" class="img-fluid figure-img"></p>
<figcaption>IMG_2688.JPG</figcaption>
</figure>
</div>
<p>Recently, I wondered if a modern LLM assistant could write code to get better results from GPT-2.</p>
<p>GPT-2 now runs easily on a laptop. The examples below show the sort of output the model would produce without finetuning, quickly becoming incoherent. (I remember an early chatbot experiment that seemed to work fine until my spouse tested it. In an example of early AI safety red-teaming, she got it to generate an endless string of “DIE DIE DIE DIE DIE” within 5 turns.)</p>
<div id="3d3ae146-d071-42cc-9eba-b430ecb118e1" class="cell" data-execution_count="1">
<div class="code-copy-outer-scaffold"><div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> transformers</span></code></pre></div></div>
</div>
<p>This is what happens with prompts like “Haiku” or “Here is a Haiku:”</p>
<div id="a8af3cb9-7b2c-4d07-b31d-663dfe1304f8" class="cell">
<div class="code-copy-outer-scaffold"><div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pipeline, set_seed</span>
<span id="cb2-2">generator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'text-generation'</span>, model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gpt2'</span>)</span>
<span id="cb2-3">set_seed(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>)</span></code></pre></div></div>
</div>
<div id="abca3d96-917c-46ab-ae0f-2daf17413e2a" class="cell" data-scrolled="true" data-execution_count="7">
<div class="code-copy-outer-scaffold"><div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">generator(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Here is a haiku poem,"</span>, num_return_sequences<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span></code></pre></div></div>
<div class="cell-output cell-output-stderr">
<pre><code>Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="7">
<pre><code>[{'generated_text': 'Here is a haiku poem, written by an American writer, in which he describes the story of the first American man to commit suicide in the world.\n\nThe poem is called "The Way of the Soldier."\n\nThe story about the first man to commit suicide in the world\n\nWritten by: Charles P. Smith, Jr.\n\nEdited by: Robert L. Williams\n\nThe poem was published in 1858 as a short story.\n\nThe poem was written about a man named "Vincent" who committed suicide, after which he read his own poem and asked for forgiveness from his fellow citizens.\n\nIn 1859, Vincent wrote, "I am a man of spirit, a man of courage. A man of courage. A man of spirit. A man of courage. A man of courage."\n\nVincent continued, "I am not afraid of anything, of the world, of life. I am not afraid of any thing, of my fellow men, of the world, of death. I am not afraid of the world. I am not afraid of anything, of the world, of life. I am not afraid of any thing, of the world, of death. I am not afraid of any thing, of my fellow men, of the world'},
 {'generated_text': 'Here is a haiku poem, "To die for my name" by Nils Nils.\n\nThis is the original poem by Nils Nils.\n\nThe first part was composed for the novel "The Long Night".\n\nThe second part was composed for the novel "The Long Night" by Nils Nils.\n\nThe third part was composed for the novel "The Long Night" by Nils Nils.\n\nThe fourth part was composed for the novel "The Long Night" by Nils Nils.\n\nThe fifth part was composed for the novel "The Long Night" by Nils Nils.\n\nThe sixth part was composed for the novel "The Long Night" by Nils Nils.\n\nThe seventh part was composed for the novel "The Long Night" by Nils Nils.\n\n\nThe eighth part was composed for the novel "The Long Night" by Nils Nils.\n\n\nThe ninth part was composed for the novel "The Long Night" by Nils Nils.\n\n\nThe tenth part was composed for the novel "The Long Night" by Nils Nils.\n\n\nThe eleventh part was composed for the novel "The Long Night" by Nils Nils.\n\nThe tw'},
 {'generated_text': 'Here is a haiku poem, adapted from a poem about a young boy:\n\nI am the son of an old man,\n\nand the father of a young girl.\n\nAnd the day of the coming of the sun,\n\nthe year, the year,\n\nthe year of heaven.\n\nI am the son of an old man, and the father of a young girl.\n\nBut when the sun comes, the year, the year of heaven,\n\nthe year of the moon,\n\nthe year of the stars,\n\nand the year of the angels;\n\nI am the son of an old man, and the father of a young girl.\n\nBut when the sun comes, the year, the year of heaven,\n\nthe year of the moon,\n\nthe year of the stars,\n\nand the year of the angels;\n\nI am the son of an old man, and the father of a young girl.\n\nBut when the sun comes, the year, the year of heaven,\n\nthe year of the moon,\n\nthe year of the stars,\n\nand the year of the angels;\n\nI am the son of an old man, and the father of a young girl.'},
 {'generated_text': "Here is a haiku poem, which I found on my way to work.\n\nI read it for the first time in my head when I was a kid and it's a pretty short poem about a boy who loves to eat. It's a good story about a boy who's lost his love and ends up as a child.\n\nThere is a scene where a young girl comes to the end of the story, and she's crying and she says the word 'love' and what am I doing to my mom and dad and what about my dad. And the girl says, 'I love you too and I am your best friend, oh my god, I love you too!' And she goes, 'I love you, my mommy loves you too. I love you too, my mommy loves you too.' I think that's a good bit of emotional empathy, if you will.\n\nIt's a pretty short story. On my back are a few words that I've said often enough, but I think the gist is this:\n\nI love you, my mommy loves you too. I love you, my mommy loves you too. I love you, my mommy loves you too. I love you, my mommy loves you too.\n\nThere"},
 {'generated_text': 'Here is a haiku poem, from a popular Japanese language book, published in the early 1950s, by the famous Japanese singer Takayuki Utsukai.\n\n\nThe poem was sung at the University of California, Berkeley in 1952. It was featured in a film called "The Love Song of the Spring".\n\n\nThe film\'s star was Takayuki Utsukai. In the film, Utsukai was portrayed by a young Japanese man named Akiyobu Suzuki, and the film\'s director was the Japanese novelist Yoshinori Kitano.\n\n\nUtsukai\'s name was also mentioned as a character in "Love Song of the Spring".\n\n\nThe poem was translated into English by the English version of the popular Japanese manga series "One Piece". The novel\'s title refers to the title character, Utsukai.\n\n\nThe poem was also adapted into the novel by the singer-songwriter Otsuki Yoshinori.\n\n\nIn the novel, this haiku poem was read aloud and translated into Japanese.\n\n\nUtsukai was also an idol in the idol group the Kinkaku Yakuza.\n\n\nIn addition to a song, there were also other haikus included in the anime.\n\n\nThere were'}]</code></pre>
</div>
</div>
<div id="260eb8d9-9466-48e9-8313-92733a6e1fd0" class="cell" data-scrolled="true" data-execution_count="8">
<div class="code-copy-outer-scaffold"><div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">generator(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"HAIKU:"</span>, num_return_sequences<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span></code></pre></div></div>
<div class="cell-output cell-output-stderr">
<pre><code>Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="8">
<pre><code>[{'generated_text': 'HAIKU: Right. I want to tell you, I\'m not going to go into detail about what he does there, but he\'s a big fan of a lot of the things you can relate to in terms of the things he\'s doing here. He\'s just a really great guy. He\'s really into the game. He has a lot of love for the game and wants to try to make it better. I could go on and on. But I\'m going to leave it there.\n\nQ: If there\'s anything you would like to add in the future, what would it be?\n\nA: I\'m sure we\'ll get to that. I\'m sure you\'ll have to wait and see.\n\nQ: I know you said you were going to do the "No-Sell List" thing. Are you still looking for a new GM?\n\nA: I\'m definitely looking to do it. I\'m sure I\'ve done it before. I\'m not looking to do that. I\'m just looking to hire somebody who can bring that expertise to the table.\n\nQ: Do you have any specific plans for next season?\n\nA: We\'ve got a lot of work ahead of us on that. I\'m excited for what'},
 {'generated_text': 'HAIKU: You saw that? (laughs) I think he was making a lot of money. It was like, "Oh my God, that\'s going to be a lot bigger than what I paid for."\n\nMARK: It was. (laughs)\n\nKATIE: It was. You got to see it. I got to see it.\n\nMARK: So, I mean, I mean, that\'s what a lot of us do. We were all working on the film and we got to see it.\n\nKATIE: Yeah, yeah.\n\nMARK: How about when you\'re working on a film, how do you get to see it and what do you get to see?\n\nKATIE: Well, I get to see it when I\'m working on a film. And I get to see it when I\'m working on a film.\n\nMARK: Oh, you\'re right.\n\nKATIE: The last time I saw it, it was a little bit darker than it was in the first place.\n\nMARK: (laughs)\n\nKATIE: I mean, it\'s a little bit darker. And when I was making that movie, I was feeling'},
 {'generated_text': 'HAIKU: The Unfair Test Demon, Aamir Demon God Dragon, Baal awoken sinner Demon King, Zaerog∞ Demon Lord, Belial Demon King, Cauchemar Demon Man, Metatron Demon Messenger, Metatron TAMADRA Fallen Angel Lucifer Fastest Sky Pirate, Balthier Demon Lord, Belial Demon Lord, Buster Siegfried Demon Lord, Buster Siegfried Protector of the Sea, Ganesha Demon God, Ra Dragon Anubis Demon God of Fury, Ares demon of the damned, beelzebub Demon God of the Climactic Night, Lucifer Demon God of the Night, Tsukuyomi Dragon Anubis Demon God of Steel, Verra Demon which Kill Devil Dragon, Canopus Ateria Demon Weal, Shouki Demon Blade Brave, Kopisubi The Flash Maleficent Dragon Lord Zaerog∞ Demon Lord, Furi Zoldyck Thunderdragon Indra Thundering CyberDragon, Shedar Thunderlord Shocker Thunderlord Zinogre Thunderous Demon Princess, Raijin Thunderous Screaming Demon Count, Ronove Thundershock Tiger Dragon, Balidoora Thunderstone Edge, Caladbolg Tiamat Tidus Tifa Tigrex Tigrex &amp; Rex Cat Timbel Armor X Dragon Caller, Ana Time Guardians, Tak'},
 {'generated_text': "HAIKU: The Demon's Trap The Game The Challenge The Chaos Engine The Charming Empire The Charnel House Trilogy The Chosen RPG The Chosen Warriors The chronicles of Emerland. Solitaire. The Clans - Saga of the Twins The Cleansing The Collider The Collider 2 The Coma The Coma: Recut The Concourse The Confines Of The Crown The Construct The Consuming Shadow The Cooking Game The Corridor: On Behalf Of The Dead The Council The Count Lucanor The Counting Kingdom The Crooked Man The Crow's Eye The Crowded Party Game Collection The Crypts of Anak Shaba - VR The Culling Of The Cows The Curious Expedition The Cursed Forest The Dark Eye: Chains of Satinav The Dark Inside Me The Dark Legions The Dark Stone from Mebara The Dark Tales of Katarina The Darkside Detective The Dead Linger The Deadly Tower of Monsters The Deal The Decimation of Olarath The Deed The Deed: Dynasty The Deer The Deer God The Defenders: The Second Wave The Deletion The Descendant The Detail The Dishwasher: Vampire Smile The Disney Afternoon Collection The District The Divine Paradox The Dolls The Dope Game The Dream Machine The Dreamatorium of Dr. Magnus 2 The Dreamlord The"},
 {'generated_text': "HAIKU: That's the kind of story I always wanted to hear. I have a family that I don't really know well, but I've had some good conversations with other families. I'm a professional hockey player, and I'm a professional broadcaster, and I've seen a lot of great things in the past, but I'm not sure yet how I would want to continue playing hockey in my life.\n\nA: When we were talking about the future, you were talking about a certain player, but it was also about you and the guys, and the team, and the fans, and the fans—you were doing a great job.\n\nAdvertisement\n\nQ: And you're not going to play for the team again?\n\nA: No, I'm not going to play for the team in any way.\n\nQ: You're not going to play for the team, but you're going to play for a certain team?\n\nAdvertisement\n\nA: No, I'm going to play for a certain team. So all of a sudden, I'm going to play for the team.\n\nQ: I've been told it's about a certain player, but I'm not going to play for it?\n\nA: No"}]</code></pre>
</div>
</div>
<p>Here’s an example of using the first words of a famous haiku as a prompt, to see if the model can generate the next few lines (it doesn’t).</p>
<div id="2715a5b6-311d-4181-b567-f9cf4c9e3828" class="cell" data-scrolled="true" data-execution_count="9">
<div class="code-copy-outer-scaffold"><div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">generator(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Old pond a frog jumps"</span>, num_return_sequences<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb9-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#expected completion - "the sound of water"</span></span></code></pre></div></div>
<div class="cell-output cell-output-stderr">
<pre><code>Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="9">
<pre><code>[{'generated_text': 'Old pond a frog jumps up from under the water to attack a crocodile.\n\nA frog jumps up from under the water to attack a crocodile.\n\nA frog jumps up from under the water to attack a crocodile.\n\nA frog jumps up from under the water to attack a crocodile.\n\nA frog jumps up from under the water to attack a crocodile.\n\nA frog jumps up from under the water to attack a crocodile.\n\nA frog jumps up from under the water to attack a crocodile.\n\nA frog jumps up from under the water to attack a crocodile.\n\nA frog jumps up from under the water to attack a crocodile.\n\nA frog jumps up from under the water to attack a crocodile.\n\nA frog jumps up from under the water to attack a crocodile.\n\nA frog jumps up from under the water to attack a crocodile.\n\nA frog jumps up from under the water to attack a crocodile.\n\nA frog jumps up from under the water to attack a crocodile.\n\nA frog jumps up from under the water to attack a crocodile.\n\nA frog jumps up from under the water to attack a crocodile.\n\nA frog jumps'},
 {'generated_text': 'Old pond a frog jumps over a pond.\n\nA frog jumps over a pond. A large frog climbs up a large pond.\n\nA frog jumps over a pond. A small frog climbs over a small pond.\n\nA frog jumps over a pond. A large frog jumps over a pond.\n\nA frog jumps over a pond. A small frog jumps over a small pond.\n\nA frog jumps over a pond. A small frog jumps over a small pond.\n\nA frog jumps over a pond. A small frog jumps over a small pond.\n\nA frog jumps over a pond. A small frog jumps over a small pond.\n\nA frog jumps over a pond. A small frog jumps over a small pond.\n\nA frog jumps over a pond. A small frog jumps over a small pond.\n\nA frog jumps over a pond. A small frog jumps over a small pond.\n\nA frog jumps over a pond. A small frog jumps over a small pond.\n\nA frog jumps over a pond. A small frog jumps over a small pond.\n\nA frog jumps over a pond. A small frog jumps over a small pond.\n\nA frog jumps over a pond. A small frog jumps over a small pond.\n'},
 {'generated_text': 'Old pond a frog jumps over.\n\nIn addition to being a common sight, however, it is also sometimes called a "watermelon" because of its color.\n\nWhat is a "pest" instead?\n\nThere are many different types of pest, and it is a common misconception that you need to know how to properly identify one.\n\nThere are different types of pest - the common, the exotic, and the exotic.\n\nThe exotic is a watermelon, and the common variety is a potted fruit.\n\nThe exotic is a watermelon with a little blood on the flesh.\n\nIn terms of flavor, the potted fruit is a bit more sweet, and the exotic is a bit more "sugar."\n\nThe exotic is also known as a red-orange, and the common variety is a red-orange.\n\nOne of the most common types of pest is called a "watermelon" because it is yellowish.\n\nThe common variety is called "potted fruit," but for some reason it is more common for the red-orange variety to be called a "potted fruit."\n\nThe exotic variety is called a "potted fruit," but for some reason, it is more common for'},
 {'generated_text': 'Old pond a frog jumps over.\n\n"I\'m not going to tell you a secret," she says. "I\'m not going to tell you a secret, but I do want to tell you something. But you\'ve got to remember the name and what it means. It\'s the name of this village. It\'s the name of a village. And I\'m going to tell you how it all started."\n\n"What," says the girl.\n\n"I was just talking to a local girl," says the frog. "We met over a beer. She said she wanted to know the village name. Why didn\'t you tell her?"\n\n"Because it was too hard for us to find out. It\'s not even a village, isn\'t it?"\n\n"No, it\'s a village," says the frog. "You see the name of this girl in the book, right? It\'s here. It was here before the war. It\'s the name of this village. It\'s the name of a village. And I was so embarrassed that I couldn\'t tell her. I had to put it away."\n\n"I knew you wouldn\'t know any better," answers the girl.'},
 {'generated_text': 'Old pond a frog jumps into the water. The frogs swim around the pond and go back to the pond. Eventually they get to the bottom of the pond. They make it to the bottom where they drown. The next morning the water is clear and the frogs start swimming again. Eventually they are able to get to the top of the pond and they all swim back down the hill.\n\n\nThis is the only way to get to the top of the pond.\n\n\nThe frog is back to the pond and when he comes back it is time to go back to the pond to get some water. The water is clear and the frog is right back up the hill.\n\n\nThe frog is back to the pond and he is back to the pond.'}]</code></pre>
</div>
</div>
<p>My 2020 method (prompting based on a haiku-related seed word) was essentially an ‘accidental haiku finder’ combining generative text and procedural generation. <em>(Spoiler alert - thanks to Claude, I’ve now figured out that a few-shot approach would have generated better results without finetuning!)</em></p>
<div id="b1ab98a9-ae7f-48c9-9427-83ed3f1f7e68" class="cell">
<details class="code-fold">
<summary>Show the 2020 code</summary>
<div class="code-copy-outer-scaffold"><div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#export</span></span>
<span id="cb12-2"></span>
<span id="cb12-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">##General verse_gen - input is input, number of syllables required</span></span>
<span id="cb12-4"></span>
<span id="cb12-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> verse_gen(verse_input, syllable_length):</span>
<span id="cb12-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">global</span> verse_words</span>
<span id="cb12-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">global</span> verse_string</span>
<span id="cb12-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">global</span> verse_count</span>
<span id="cb12-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">global</span> verse_syllable_count</span>
<span id="cb12-10">    </span>
<span id="cb12-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Go to first whitespace, count syllables.  Continue until "syllable_length" syllables.  If over required amount syllables try with new input.</span></span>
<span id="cb12-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#initialize counters</span></span>
<span id="cb12-13"></span>
<span id="cb12-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#left side location in string</span></span>
<span id="cb12-15">    y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb12-16">    </span>
<span id="cb12-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#right side location in string</span></span>
<span id="cb12-18">    x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb12-19">    </span>
<span id="cb12-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#counter for number of times to try this before getting new input</span></span>
<span id="cb12-21">    z<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb12-22">    </span>
<span id="cb12-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#initial syllable count of zero</span></span>
<span id="cb12-24">    verse_syllable_count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb12-25"></span>
<span id="cb12-26">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Split the input to make it a list of words</span></span>
<span id="cb12-27">    verse_words<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>verse_input.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span>)</span>
<span id="cb12-28"></span>
<span id="cb12-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Set a counter - try this a number of times then move on</span></span>
<span id="cb12-30">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>:</span>
<span id="cb12-31">    </span>
<span id="cb12-32">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> verse_syllable_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> syllable_length:</span>
<span id="cb12-33">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Adding next word to the string"</span>)</span>
<span id="cb12-34">        </span>
<span id="cb12-35">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Put words from y to x in a string</span></span>
<span id="cb12-36">            verse_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span>.join(verse_words[y:x])</span>
<span id="cb12-37"></span>
<span id="cb12-38">                </span>
<span id="cb12-39">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#If no special characters, Count the syllables</span></span>
<span id="cb12-40">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Validate haiku-able phrases.  If not, reinitialize the string and keep going</span></span>
<span id="cb12-41">            </span>
<span id="cb12-42">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Get rid of any phrase with numerals or special characters in it</span></span>
<span id="cb12-43">            </span>
<span id="cb12-44">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> re.match(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^[a-zA-Z</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">s-]*$"</span>, verse_string):</span>
<span id="cb12-45">                verse_syllable_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> syllapy.count(verse_string)</span>
<span id="cb12-46">    </span>
<span id="cb12-47">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#increment x</span></span>
<span id="cb12-48">                x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb12-49"></span>
<span id="cb12-50">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#increment z</span></span>
<span id="cb12-51">                z<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>z<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb12-52"></span>
<span id="cb12-53">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#print the string</span></span>
<span id="cb12-54">                <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(verse_string)</span>
<span id="cb12-55">            </span>
<span id="cb12-56">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb12-57">                <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(verse_string, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Invalid characters. Moving up in string."</span>)</span>
<span id="cb12-58">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#reinitialize verse_string</span></span>
<span id="cb12-59">                verse_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span></span>
<span id="cb12-60">                verse_syllable_count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb12-61">                y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb12-62">                </span>
<span id="cb12-63">            </span>
<span id="cb12-64">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> verse_syllable_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> syllable_length:</span>
<span id="cb12-65">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Get rid of any trailing spaces</span></span>
<span id="cb12-66">            verse_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> verse_string.strip()</span>
<span id="cb12-67">            last_word<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>verse_string.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span>)[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb12-68">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Get rid of any phrase ending in an article or preposition words</span></span>
<span id="cb12-69">            </span>
<span id="cb12-70">            bad_word_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'as of the and if or at by our your my'</span></span>
<span id="cb12-71">            bad_word_set <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(bad_word_list.split())</span>
<span id="cb12-72"></span>
<span id="cb12-73">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (last_word <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> bad_word_set):</span>
<span id="cb12-74">                </span>
<span id="cb12-75">                <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(verse_string, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">": String ends in article or other undesirable word.  Moving up in string"</span>)</span>
<span id="cb12-76">                </span>
<span id="cb12-77">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#reinitialize verse_string</span></span>
<span id="cb12-78">                verse_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span></span>
<span id="cb12-79">                verse_syllable_count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb12-80">                y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb12-81">           </span>
<span id="cb12-82">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#If successful, print string and return    </span></span>
<span id="cb12-83">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb12-84">                <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Haiku line found:</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, verse_string)</span>
<span id="cb12-85">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> verse_string</span>
<span id="cb12-86">    </span>
<span id="cb12-87">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> verse_syllable_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> syllable_length:</span>
<span id="cb12-88">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#If string is too long, reinitialize the string and keep going</span></span>
<span id="cb12-89"></span>
<span id="cb12-90">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(verse_string, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">": String too long. Moving up in string."</span>)</span>
<span id="cb12-91">            </span>
<span id="cb12-92">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#reinitialize verse_string</span></span>
<span id="cb12-93">            verse_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span></span>
<span id="cb12-94">            verse_syllable_count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb12-95">            y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb12-96">            </span>
<span id="cb12-97">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#verse_gen(verse_input, syllable_length)</span></span>
<span id="cb12-98"></span>
<span id="cb12-99">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Get a new string and start over if this string doesn't work</span></span>
<span id="cb12-100">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>:</span>
<span id="cb12-101">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Getting new input."</span>)</span>
<span id="cb12-102">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#text_generator(state_dict)   </span></span>
<span id="cb12-103">        verse_input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GPT2_output</span>
<span id="cb12-104">        verse_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>verse_gen(verse_input, syllable_length)</span>
<span id="cb12-105">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> verse_string</span>
<span id="cb12-106"></span>
<span id="cb12-107"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span><span class="re">END</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> OF VERSE ONE GEN    </span></span>
<span id="cb12-108"></span>
<span id="cb12-109"></span>
<span id="cb12-110"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> haiku_gen():</span>
<span id="cb12-111">    <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb12-112">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">global</span> GPT2_seed_text</span>
<span id="cb12-113">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">global</span> haiku_seed</span>
<span id="cb12-114">    lines <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sajiki.txt'</span>).read().splitlines()</span>
<span id="cb12-115">    GPT2_seed_text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> random.choice(lines)</span>
<span id="cb12-116">    haiku_seed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GPT2_seed_text</span>
<span id="cb12-117">   </span>
<span id="cb12-118">    text_generator(state_dict)</span>
<span id="cb12-119"></span>
<span id="cb12-120"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Code to generate verse 1:</span></span>
<span id="cb12-121">    verse_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span></span>
<span id="cb12-122">    verse_input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GPT2_output</span>
<span id="cb12-123">    syllable_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb12-124">    verse_one_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>verse_gen(verse_input, syllable_length)</span>
<span id="cb12-125">    </span>
<span id="cb12-126"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Code to generate verse 2:</span></span>
<span id="cb12-127">    verse_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span></span>
<span id="cb12-128">    GPT2_seed_text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> verse_one_string</span>
<span id="cb12-129">    text_generator(state_dict)</span>
<span id="cb12-130">    verse_input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GPT2_output</span>
<span id="cb12-131">    syllable_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span></span>
<span id="cb12-132">    verse_two_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>verse_gen(verse_input, syllable_length)</span>
<span id="cb12-133"></span>
<span id="cb12-134"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Code to generate verse 3:</span></span>
<span id="cb12-135">    verse_string <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span></span>
<span id="cb12-136">    GPT2_seed_text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> verse_one_string</span>
<span id="cb12-137">    text_generator(state_dict)</span>
<span id="cb12-138">    verse_input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GPT2_output</span>
<span id="cb12-139">    syllable_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb12-140">    verse_three_string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>verse_gen(verse_input, syllable_length)</span>
<span id="cb12-141"></span>
<span id="cb12-142"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Print finished haiku</span></span>
<span id="cb12-143">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Here is the haiku seed:"</span>)</span>
<span id="cb12-144">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(haiku_seed)</span>
<span id="cb12-145">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Here is the haiku:"</span>)</span>
<span id="cb12-146"></span>
<span id="cb12-147"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Print finished haiku</span></span>
<span id="cb12-148"> </span>
<span id="cb12-149">    finished_haiku<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span></span>
<span id="cb12-150">    finished_haiku<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.join([verse_one_string,verse_two_string,verse_three_string])</span>
<span id="cb12-151">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(finished_haiku)</span>
<span id="cb12-152">    </span>
<span id="cb12-153">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Add finished haiku to a list and date</span></span>
<span id="cb12-154">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Todo add date and time</span></span>
<span id="cb12-155">     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#import datetime</span></span>
<span id="cb12-156">    <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> datetime <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> datetime</span>
<span id="cb12-157"></span>
<span id="cb12-158">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get current date</span></span>
<span id="cb12-159">    now <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> datetime.now()</span>
<span id="cb12-160">    </span>
<span id="cb12-161">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># convert current date into timestamp</span></span>
<span id="cb12-162">    haiku_time <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> now.strftime(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%m/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%d</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/%Y, %H:%M:%S"</span>)</span>
<span id="cb12-163"></span>
<span id="cb12-164">    f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"haikulist.txt"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a"</span>)</span>
<span id="cb12-165">    f.write(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Haiku seed:</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>haiku_seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Haiku:</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>finished_haiku<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>haiku_time)</span>
<span id="cb12-166">    f.close()</span>
<span id="cb12-167">    </span>
<span id="cb12-168">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Place finished haiku in an input for GUI (clear it out first)</span></span>
<span id="cb12-169">    f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"latesthaiku.txt"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"w"</span>)</span>
<span id="cb12-170">    f.write(finished_haiku)</span>
<span id="cb12-171">    f.close()</span>
<span id="cb12-172"></span>
<span id="cb12-173"></span>
<span id="cb12-174">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Put verse2 in as GPT seedtext seed  ## This leads to too much convergence</span></span>
<span id="cb12-175">    </span>
<span id="cb12-176">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  f.write(verse_two_string)</span></span>
<span id="cb12-177">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  get sajiki from http://jti.lib.virginia.edu/japanese/haiku/saijiki/full.html  -&gt; sajiki.txt</span></span>
<span id="cb12-178">   </span>
<span id="cb12-179">    </span>
<span id="cb12-180">    <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb12-181">    </span>
<span id="cb12-182">    <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> IPython.display <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Audio</span>
<span id="cb12-183"></span>
<span id="cb12-184">    wave <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.sin(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>np.pi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">400</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span>)</span>
<span id="cb12-185">    Audio(wave, rate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30000</span>, autoplay<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb12-186"></span>
<span id="cb12-187"></span>
<span id="cb12-188">    </span>
<span id="cb12-189"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">##Run the module:</span></span>
<span id="cb12-190"></span>
<span id="cb12-191"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Initial arguments go here:</span></span>
<span id="cb12-192"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> IPython.display <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Audio</span>
<span id="cb12-193">args_nsamples <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb12-194">args_batch_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb12-195">args_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb12-196">args_unconditional <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb12-197">args_temperature <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span></span>
<span id="cb12-198">args_top_k <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span></span>
<span id="cb12-199">args_quiet <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb12-200">verse_input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span></span>
<span id="cb12-201">z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb12-202"></span>
<span id="cb12-203"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>:</span>
<span id="cb12-204">   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># lines = open('sajiki.txt').read().splitlines()</span></span>
<span id="cb12-205">   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># GPT2_seed_text = random.choice(lines)</span></span>
<span id="cb12-206">   </span>
<span id="cb12-207">    haiku_gen()</span>
<span id="cb12-208">    </span>
<span id="cb12-209">    </span>
<span id="cb12-210">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Beep after each iteration</span></span>
<span id="cb12-211">    wave <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.sin(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>np.pi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">400</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span>)</span>
<span id="cb12-212">    Audio(wave, rate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30000</span>, autoplay<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb12-213">    z<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb12-214">    </span>
<span id="cb12-215"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Beep when all done</span></span>
<span id="cb12-216"></span>
<span id="cb12-217">wave <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.sin(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>np.pi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">400</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span>)</span>
<span id="cb12-218">Audio(wave, rate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40000</span>, autoplay<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb12-219">    </span></code></pre></div></div>
</details>
</div>
<p>Here’s an indicative result of a generated “haiku”:</p>
<div class="code-output">
<p>Haiku seed:</p>
<p>kōri , ice</p>
<p>Haiku:</p>
<p>ice water is<br>
extremely sensitive<br>
But you might want to</p>
</div>
<p>To be clear, most of the results were terrible!</p>
<p>Here are some of the more interesting generations:</p>
<p><em>There will be no<br>
shortage of good things going<br>
have insurance</em></p>
<p><em>Should we be worried<br>
are the implications<br>
taking the first steps</em></p>
<p><em>Lactobacillus<br>
use of a strain as a<br>
A novel species</em></p>
<p>It also generated some real oddballs and many nonsensical results -</p>
<p><em>“The only<br>
now will be my story. My<br>
now is not a good</em></p>
<p><em>which saw the season<br>
premiere of The Mummy<br>
and will likely</em></p>
<p><strong>Asking LLMs for help in 2025</strong></p>
<p>Now, could Claude in 2025 come up with a better solution?</p>
<p>2025 prompt to Sonnet 4.5:</p>
<p><em>I’d like you to use GPT-2 to create a haiku. I’m accessing GPT-2 by using a Jupyter notebook, using the following code. Please build off of this example to make a GPT-2 Haiku generator using Python script that I can run in a Jupyter notebook on my MacBook.</em></p>
<p><em>from transformers import pipeline, set_seed<br>
generator = pipeline(‘text-generation’, model=‘gpt2’)<br>
set_seed(42)<br>
generator(“Hello, I’m a language model,”, max_length=30, num_return_sequences=5)</em></p>
<p>Here’s Sonnet 4.5’s answer:</p>
<div id="bd8be4a0-2a1e-4def-9a31-a90ba207892b" class="cell" data-execution_count="24">
<details class="code-fold">
<summary>Cell 1</summary>
<div class="code-copy-outer-scaffold"><div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># GPT-2 Haiku Generator - Jupyter Notebook Version</span></span>
<span id="cb13-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Copy each cell below into separate cells in your Jupyter notebook</span></span>
<span id="cb13-3"></span>
<span id="cb13-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ============================================</span></span>
<span id="cb13-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># CELL 1: Install dependencies (if needed)</span></span>
<span id="cb13-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ============================================</span></span>
<span id="cb13-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Uncomment and run if you need to install transformers</span></span>
<span id="cb13-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># !pip install transformers torch</span></span></code></pre></div></div>
</details>
</div>
<div id="e761cb82-9e4f-4193-b0d0-ebdbd738550e" class="cell">
<details class="code-fold">
<summary>Cell 2</summary>
<div class="code-copy-outer-scaffold"><div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ============================================</span></span>
<span id="cb14-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># CELL 2: Import libraries and define functions</span></span>
<span id="cb14-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ============================================</span></span>
<span id="cb14-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pipeline, set_seed</span>
<span id="cb14-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> re</span>
<span id="cb14-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb14-7"></span>
<span id="cb14-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Syllable counting using a simple heuristic</span></span>
<span id="cb14-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> count_syllables(word):</span>
<span id="cb14-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Count syllables in a word using vowel-counting heuristic."""</span></span>
<span id="cb14-11">    word <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> word.lower().strip()</span>
<span id="cb14-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(word) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb14-13">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb14-14">    </span>
<span id="cb14-15">    word <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> re.sub(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r'</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[^a-z]</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>, word)</span>
<span id="cb14-16">    vowels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aeiouy"</span></span>
<span id="cb14-17">    syllable_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb14-18">    previous_was_vowel <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb14-19">    </span>
<span id="cb14-20">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> char <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> word:</span>
<span id="cb14-21">        is_vowel <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> char <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> vowels</span>
<span id="cb14-22">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> is_vowel <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> previous_was_vowel:</span>
<span id="cb14-23">            syllable_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb14-24">        previous_was_vowel <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> is_vowel</span>
<span id="cb14-25">    </span>
<span id="cb14-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> word.endswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'e'</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> syllable_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb14-27">        syllable_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb14-28">    </span>
<span id="cb14-29">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> syllable_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb14-30">        syllable_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb14-31">    </span>
<span id="cb14-32">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> syllable_count</span>
<span id="cb14-33"></span>
<span id="cb14-34"></span>
<span id="cb14-35"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> count_line_syllables(line):</span>
<span id="cb14-36">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Count total syllables in a line of text."""</span></span>
<span id="cb14-37">    words <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> re.findall(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r'</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">\b</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[a-zA-Z]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">\b</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>, line)</span>
<span id="cb14-38">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(count_syllables(word) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> word <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> words)</span>
<span id="cb14-39"></span>
<span id="cb14-40"></span>
<span id="cb14-41"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> generate_haiku_line(generator, prompt, target_syllables, max_attempts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>):</span>
<span id="cb14-42">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Generate a line with approximately the target number of syllables."""</span></span>
<span id="cb14-43">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> attempt <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(max_attempts):</span>
<span id="cb14-44">        output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> generator(</span>
<span id="cb14-45">            prompt,</span>
<span id="cb14-46">            max_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> attempt,</span>
<span id="cb14-47">            num_return_sequences<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb14-48">            temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (attempt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.02</span>),</span>
<span id="cb14-49">            do_sample<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb14-50">            top_k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>,</span>
<span id="cb14-51">            top_p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span></span>
<span id="cb14-52">        )[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'generated_text'</span>]</span>
<span id="cb14-53">        </span>
<span id="cb14-54">        generated <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> output[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(prompt):].strip()</span>
<span id="cb14-55">        lines <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> re.split(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r'</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[.!?</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>, generated)</span>
<span id="cb14-56">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> lines:</span>
<span id="cb14-57">            line <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> lines[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].strip()</span>
<span id="cb14-58">            syllables <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> count_line_syllables(line)</span>
<span id="cb14-59">            </span>
<span id="cb14-60">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>(syllables <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> target_syllables) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb14-61">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> line, syllables</span>
<span id="cb14-62">    </span>
<span id="cb14-63">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> line, syllables</span>
<span id="cb14-64"></span>
<span id="cb14-65"></span>
<span id="cb14-66"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> generate_haiku(seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, theme<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nature"</span>):</span>
<span id="cb14-67">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Generate a haiku using GPT-2."""</span></span>
<span id="cb14-68">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> seed <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb14-69">        set_seed(seed)</span>
<span id="cb14-70">        random.seed(seed)</span>
<span id="cb14-71">    </span>
<span id="cb14-72">    generator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'text-generation'</span>, model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gpt2'</span>)</span>
<span id="cb14-73">    </span>
<span id="cb14-74">    theme_prompts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb14-75">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nature"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The autumn leaves"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Morning dew on"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cherry blossoms"</span>, </span>
<span id="cb14-76">                   <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The mountain peak"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ocean waves crash"</span>],</span>
<span id="cb14-77">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"seasons"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Winter snow falls"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Spring flowers bloom"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Summer heat waves"</span>,</span>
<span id="cb14-78">                   <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Autumn winds blow"</span>],</span>
<span id="cb14-79">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"zen"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Silent meditation"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Peace surrounds the"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Quiet temple bell"</span>,</span>
<span id="cb14-80">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Moonlight reflection"</span>],</span>
<span id="cb14-81">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ocean"</span>: [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The ocean tide"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Waves upon the"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Deep blue water"</span>,</span>
<span id="cb14-82">                 <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Coastal sunset"</span>],</span>
<span id="cb14-83">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"custom"</span>: [theme]</span>
<span id="cb14-84">    }</span>
<span id="cb14-85">    </span>
<span id="cb14-86">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> theme <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> theme_prompts:</span>
<span id="cb14-87">        prompts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> theme_prompts[theme]</span>
<span id="cb14-88">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb14-89">        prompts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> theme_prompts[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"custom"</span>]</span>
<span id="cb14-90">    </span>
<span id="cb14-91">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Generating haiku...</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb14-92">    </span>
<span id="cb14-93">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Line 1: 5 syllables</span></span>
<span id="cb14-94">    prompt1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> random.choice(prompts)</span>
<span id="cb14-95">    line1, syl1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> generate_haiku_line(generator, prompt1, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb14-96">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Line 1 (</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>syl1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> syllables): </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>line1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb14-97">    </span>
<span id="cb14-98">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Line 2: 7 syllables</span></span>
<span id="cb14-99">    line2, syl2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> generate_haiku_line(generator, line1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>)</span>
<span id="cb14-100">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Line 2 (</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>syl2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> syllables): </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>line2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb14-101">    </span>
<span id="cb14-102">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Line 3: 5 syllables</span></span>
<span id="cb14-103">    line3, syl3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> generate_haiku_line(generator, line2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb14-104">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Line 3 (</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>syl3<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> syllables): </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>line3<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb14-105">    </span>
<span id="cb14-106">    haiku <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>line1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>line2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>line3<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb14-107">    </span>
<span id="cb14-108">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"="</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)</span>
<span id="cb14-109">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GENERATED HAIKU:"</span>)</span>
<span id="cb14-110">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"="</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)</span>
<span id="cb14-111">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(haiku)</span>
<span id="cb14-112">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"="</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)</span>
<span id="cb14-113">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Syllable count: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>syl1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>syl2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>syl3<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb14-114">    </span>
<span id="cb14-115">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> haiku</span>
<span id="cb14-116"></span>
<span id="cb14-117"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"✅ Functions loaded successfully!"</span>)</span>
<span id="cb14-118"></span>
<span id="cb14-119"></span></code></pre></div></div>
</details>
</div>
<div id="abe5160c-800c-4ef6-b8f9-f10f3229d7b4" class="cell">
<details class="code-fold">
<summary>Cell 3</summary>
<div class="code-copy-outer-scaffold"><div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ============================================</span></span>
<span id="cb15-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># CELL 3: Generate a single haiku</span></span>
<span id="cb15-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ============================================</span></span>
<span id="cb15-4"></span>
<span id="cb15-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate one haiku with a specific seed</span></span>
<span id="cb15-6">haiku <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> generate_haiku(seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>, theme<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nature"</span>)</span></code></pre></div></div>
</details>
</div>
<p>==================================================<br>
GENERATED HAIKU:<br>
==================================================<br>
look a bit too nice<br>
to use in any way<br>
in their own life<br>
==================================================<br>
Syllable count: 5-6-4<br>
</p>
<div id="a9ad883e-eda1-4c8e-8ad7-abe8396a3f31" class="cell" data-scrolled="true">
<details class="code-fold">
<summary>Cell 4</summary>
<div class="code-copy-outer-scaffold"><div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ============================================</span></span>
<span id="cb16-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># CELL 4: Generate multiple haikus</span></span>
<span id="cb16-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ============================================</span></span>
<span id="cb16-4"></span>
<span id="cb16-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate 3 different haikus</span></span>
<span id="cb16-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>):</span>
<span id="cb16-7">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb16-8">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"HAIKU #</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb16-9">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb16-10">    generate_haiku(seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>i, theme<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nature"</span>)</span></code></pre></div></div>
</details>
</div>
<p>==================================================<br>
GENERATED HAIKU:<br>
==================================================<br>
and the mountains<br>
ʻOlaʻo, but this would not happen<br>
ʻ” in the future<br>
==================================================<br>
Syllable count: 4-6-4<br>
</p>
<div id="65ae3295-9ccb-4e18-9e6d-1005c037d6db" class="cell" data-scrolled="true">
<details class="code-fold">
<summary>Cell 5</summary>
<div class="code-copy-outer-scaffold"><div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ============================================</span></span>
<span id="cb17-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># CELL 5: Try different themes</span></span>
<span id="cb17-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ============================================</span></span>
<span id="cb17-4"></span>
<span id="cb17-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Try different themes</span></span>
<span id="cb17-6">themes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nature"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"seasons"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"zen"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ocean"</span>]</span>
<span id="cb17-7"></span>
<span id="cb17-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> theme <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> themes:</span>
<span id="cb17-9">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">🌸 Theme: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>theme<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>upper()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> 🌸"</span>)</span>
<span id="cb17-10">    generate_haiku(seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>, theme<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>theme)</span>
<span id="cb17-11">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb17-12"></span></code></pre></div></div>
</details>
</div>
<p>==================================================<br>
GENERATED HAIKU:<br>
==================================================<br>
wave and the sun<br>
- or a couple of times<br>
a lot of times<br>
==================================================<br>
Syllable count: 4-6-5<br>
</p>
<div id="495ca6b8-204e-4dbd-9217-61d9af888603" class="cell">
<details class="code-fold">
<summary>Cell 6</summary>
<div class="code-copy-outer-scaffold"><div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ============================================</span></span>
<span id="cb18-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># CELL 6: Custom theme</span></span>
<span id="cb18-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ============================================</span></span>
<span id="cb18-4"></span>
<span id="cb18-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use your own custom starting phrase</span></span>
<span id="cb18-6">custom_haiku <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> generate_haiku(seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>, theme<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The starry night"</span>)</span></code></pre></div></div>
</details>
</div>
<p>The results have some of the same issues (incoherence), but with fewer bad generations than the original method.</p>
<p>And here’s what Opus 4.1 came up with. It relies more heavily on a set number of stock seed phrases. Opus proposed an “advanced” and “simplified” script; below is the “advanced” version. Unlike Sonnet, Opus did not actually configure the output code for a Jupyter notebook despite claiming to. I’ve left the results below - they’re not great.</p>
<div id="a9506f66-03e2-48ad-9c66-81d9c3aea547" class="cell" data-execution_count="26">
<details class="code-fold">
<summary>Opus version code - Part 1</summary>
<div class="code-copy-outer-scaffold"><div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb19-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">GPT-2 Haiku Generator</span></span>
<span id="cb19-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">This script uses GPT-2 to generate text and formats it into haikus (5-7-5 syllable structure)</span></span>
<span id="cb19-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb19-5"></span>
<span id="cb19-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pipeline, set_seed</span>
<span id="cb19-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb19-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> re</span>
<span id="cb19-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> syllables  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># You'll need to install: pip install syllables</span></span>
<span id="cb19-10"></span>
<span id="cb19-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> GPT2HaikuGenerator:</span>
<span id="cb19-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gpt2'</span>):</span>
<span id="cb19-13">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Initialize the GPT-2 generator"""</span></span>
<span id="cb19-14">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.generator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'text-generation'</span>, model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>model)</span>
<span id="cb19-15">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.haiku_prompts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb19-16">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cherry blossoms"</span>,</span>
<span id="cb19-17">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Morning dewdrops"</span>,</span>
<span id="cb19-18">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Autumn leaves fall"</span>,</span>
<span id="cb19-19">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Winter silence"</span>,</span>
<span id="cb19-20">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Summer breeze"</span>,</span>
<span id="cb19-21">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mountains standing"</span>,</span>
<span id="cb19-22">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ocean waves"</span>,</span>
<span id="cb19-23">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Moonlight shining"</span>,</span>
<span id="cb19-24">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Birds singing"</span>,</span>
<span id="cb19-25">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rain falling"</span></span>
<span id="cb19-26">        ]</span>
<span id="cb19-27">    </span>
<span id="cb19-28">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> count_syllables(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, word):</span>
<span id="cb19-29">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Count syllables in a word using the syllables library"""</span></span>
<span id="cb19-30">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb19-31">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> syllables.estimate(word)</span>
<span id="cb19-32">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span>:</span>
<span id="cb19-33">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fallback: rough estimation if library fails</span></span>
<span id="cb19-34">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(re.findall(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r'</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[aeiouAEIOU]</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>, word)))</span>
<span id="cb19-35">    </span>
<span id="cb19-36">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> extract_words_with_syllables(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, text, target_syllables):</span>
<span id="cb19-37">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Extract words from text that sum to target syllables"""</span></span>
<span id="cb19-38">        words <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> re.findall(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r'</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">\b\w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">\b</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>, text)</span>
<span id="cb19-39">        result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb19-40">        current_syllables <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb19-41">        </span>
<span id="cb19-42">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> word <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> words:</span>
<span id="cb19-43">            syllable_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.count_syllables(word)</span>
<span id="cb19-44">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> current_syllables <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> syllable_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> target_syllables:</span>
<span id="cb19-45">                result.append(word)</span>
<span id="cb19-46">                current_syllables <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> syllable_count</span>
<span id="cb19-47">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> current_syllables <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> target_syllables:</span>
<span id="cb19-48">                    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span></span>
<span id="cb19-49">        </span>
<span id="cb19-50">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span>.join(result), current_syllables</span>
<span id="cb19-51">    </span>
<span id="cb19-52">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> generate_haiku_from_text(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, text):</span>
<span id="cb19-53">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Try to format generated text into haiku structure"""</span></span>
<span id="cb19-54">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Clean the text</span></span>
<span id="cb19-55">        text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> re.sub(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r'</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">\w\s</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>, text)</span>
<span id="cb19-56">        words <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> text.split()</span>
<span id="cb19-57">        </span>
<span id="cb19-58">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(words) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>:</span>
<span id="cb19-59">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb19-60">        </span>
<span id="cb19-61">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Try to build haiku lines</span></span>
<span id="cb19-62">        line1, syll1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.extract_words_with_syllables(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span>.join(words), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb19-63">        remaining_words <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span>.join(words[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(line1.split()):])</span>
<span id="cb19-64">        </span>
<span id="cb19-65">        line2, syll2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.extract_words_with_syllables(remaining_words, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>)</span>
<span id="cb19-66">        remaining_words <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span>.join(words[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(line1.split()) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(line2.split()):])</span>
<span id="cb19-67">        </span>
<span id="cb19-68">        line3, syll3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.extract_words_with_syllables(remaining_words, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb19-69">        </span>
<span id="cb19-70">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check if we got close enough to proper syllable counts</span></span>
<span id="cb19-71">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> syll1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> syll2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> syll3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>):</span>
<span id="cb19-72">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>line1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>line2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>line3<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb19-73">        </span>
<span id="cb19-74">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb19-75">    </span>
<span id="cb19-76">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> generate_haiku(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, prompt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>, max_attempts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>):</span>
<span id="cb19-77">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Generate a haiku using GPT-2"""</span></span>
<span id="cb19-78">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> prompt <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb19-79">            prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> random.choice(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.haiku_prompts)</span>
<span id="cb19-80">        </span>
<span id="cb19-81">        set_seed(random.randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>))</span>
<span id="cb19-82">        </span>
<span id="cb19-83">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> attempt <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(max_attempts):</span>
<span id="cb19-84">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate text with GPT-2</span></span>
<span id="cb19-85">            generated <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.generator(</span>
<span id="cb19-86">                prompt,</span>
<span id="cb19-87">                max_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>,</span>
<span id="cb19-88">                num_return_sequences<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,</span>
<span id="cb19-89">                temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>temperature,</span>
<span id="cb19-90">                pad_token_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50256</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># GPT-2's EOS token</span></span>
<span id="cb19-91">            )</span>
<span id="cb19-92">            </span>
<span id="cb19-93">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Try to format each generated text as haiku</span></span>
<span id="cb19-94">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> result <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> generated:</span>
<span id="cb19-95">                text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> result[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'generated_text'</span>]</span>
<span id="cb19-96">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove the prompt from the beginning</span></span>
<span id="cb19-97">                text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> text[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(prompt):].strip()</span>
<span id="cb19-98">                </span>
<span id="cb19-99">                haiku <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.generate_haiku_from_text(text)</span>
<span id="cb19-100">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> haiku:</span>
<span id="cb19-101">                    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Prompt: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prompt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n\n</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>haiku<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb19-102">        </span>
<span id="cb19-103">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fallback: return best attempt even if syllables aren't perfect</span></span>
<span id="cb19-104">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.create_simple_haiku(prompt)</span>
<span id="cb19-105">    </span>
<span id="cb19-106">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> create_simple_haiku(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, prompt):</span>
<span id="cb19-107">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Create a simple haiku by taking first words from generation"""</span></span>
<span id="cb19-108">        generated <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.generator(prompt, max_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>)</span>
<span id="cb19-109">        text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> generated[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'generated_text'</span>][<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(prompt):].strip()</span>
<span id="cb19-110">        words <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> re.findall(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r'</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">\b\w</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">\b</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>, text)</span>
<span id="cb19-111">        </span>
<span id="cb19-112">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(words) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>:</span>
<span id="cb19-113">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Prompt: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prompt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n\n</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>join(words[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>])<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>join(words[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>])<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>join(words[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>])<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb19-114">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb19-115">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Prompt: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prompt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n\n</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prompt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>join(words[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(words) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'whispers softly here'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'in the quiet air'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(words) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>join(words[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>])<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb19-116"></span>
<span id="cb19-117"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Example usage in Jupyter notebook:</span></span>
<span id="cb19-118"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#if __name__ == "__main__":</span></span>
<span id="cb19-119">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize the haiku generator</span></span>
<span id="cb19-120"> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">###  Note - I had to comment out the above since Opus did not actually configure this properly in cells for a Jupyter notebook   </span></span></code></pre></div></div>
</details>
</div>
<div id="78ea8cdb-867d-46d7-bb2e-25259a2e874f" class="cell" data-execution_count="29">
<details class="code-fold">
<summary>Opus version code - Part 2</summary>
<div class="code-copy-outer-scaffold"><div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1">haiku_gen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GPT2HaikuGenerator()</span>
<span id="cb20-2">    </span>
<span id="cb20-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate haikus with different prompts</span></span>
<span id="cb20-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"="</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)</span>
<span id="cb20-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GPT-2 HAIKU GENERATOR"</span>)</span>
<span id="cb20-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"="</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)</span>
<span id="cb20-7">    </span>
<span id="cb20-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate 5 haikus</span></span>
<span id="cb20-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>):</span>
<span id="cb20-10">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Haiku #</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">:"</span>)</span>
<span id="cb20-11">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb20-12">    haiku <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> haiku_gen.generate_haiku()</span>
<span id="cb20-13">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(haiku)</span>
<span id="cb20-14">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>()</span>
<span id="cb20-15">    </span>
<span id="cb20-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate haiku with custom prompt</span></span>
<span id="cb20-17"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Custom Prompt Haiku:"</span>)</span>
<span id="cb20-18"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb20-19">custom_haiku <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> haiku_gen.generate_haiku(prompt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The old computer"</span>)</span>
<span id="cb20-20"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(custom_haiku)</span></code></pre></div></div>
</details>
<div class="cell-output cell-output-stderr">
<pre><code>Device set to use mps:0
Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation=True` to explicitly truncate examples to max length. Defaulting to 'longest_first' truncation strategy. If you encode pairs of sequences (GLUE-style) with the tokenizer you can select this strategy more precisely by providing a specific strategy to `truncation`.
Both `max_new_tokens` (=256) and `max_length`(=50) seem to have been set. `max_new_tokens` will take precedence. Please refer to the documentation for more information. (https://huggingface.co/docs/transformers/main/en/main_classes/text_generation)</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>==================================================
GPT-2 HAIKU GENERATOR
==================================================

Haiku #1:
--------------------</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Both `max_new_tokens` (=256) and `max_length`(=50) seem to have been set. `max_new_tokens` will take precedence. Please refer to the documentation for more information. (https://huggingface.co/docs/transformers/main/en/main_classes/text_generation)</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Prompt: Summer breeze

blowing through the sky
made his eyes look up But in
the background the wind


Haiku #2:
--------------------</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Both `max_new_tokens` (=256) and `max_length`(=50) seem to have been set. `max_new_tokens` will take precedence. Please refer to the documentation for more information. (https://huggingface.co/docs/transformers/main/en/main_classes/text_generation)</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Prompt: Morning dewdrops

c9jpg We have some in
issues in the with the going
pipeline going


Haiku #3:
--------------------</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Both `max_new_tokens` (=256) and `max_length`(=50) seem to have been set. `max_new_tokens` will take precedence. Please refer to the documentation for more information. (https://huggingface.co/docs/transformers/main/en/main_classes/text_generation)</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Prompt: Ocean waves

Frozen rock is an
unusual thing to see Its
almost like a ghost


Haiku #4:
--------------------</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Both `max_new_tokens` (=256) and `max_length`(=50) seem to have been set. `max_new_tokens` will take precedence. Please refer to the documentation for more information. (https://huggingface.co/docs/transformers/main/en/main_classes/text_generation)</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Prompt: Morning dewdrops

to show his power
I see youre a little
bit nervous I guess


Haiku #5:
--------------------</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Both `max_new_tokens` (=256) and `max_length`(=50) seem to have been set. `max_new_tokens` will take precedence. Please refer to the documentation for more information. (https://huggingface.co/docs/transformers/main/en/main_classes/text_generation)</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Prompt: Rain falling

and hitting the ground
But if you look at the you
you cant help but of


Custom Prompt Haiku:
--------------------
Prompt: The old computer

from the 90s Im sure
The new one can handle
even more work The</code></pre>
</div>
</div>
<p><strong>Trying Claude Haiku</strong></p>
<p>And of course, we must also try Claude Haiku! Here’s what Haiku 4.5 comes up with. It also uses a limited set of indicative prompts ([“The forest”, “Morning light”, “Water flows”, “Summer breeze”]) and the results are similar to the other Claude models - not great, and occasionally problematic.</p>
<div id="2ea3af13-38b8-423b-8d36-2b32a4392807" class="cell" data-execution_count="11">
<details class="code-fold">
<summary>Claude Haiku 4.5 code</summary>
<div class="code-copy-outer-scaffold"><div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb33-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pipeline, set_seed</span>
<span id="cb33-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> re</span>
<span id="cb33-3"></span>
<span id="cb33-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize the GPT-2 text generation pipeline</span></span>
<span id="cb33-5">generator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'text-generation'</span>, model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gpt2'</span>)</span>
<span id="cb33-6">set_seed(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>)</span>
<span id="cb33-7"></span>
<span id="cb33-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> generate_haiku_text(prompt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The"</span>, max_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, num_attempts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>):</span>
<span id="cb33-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb33-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Generate text using GPT-2 and attempt to format it as a haiku.</span></span>
<span id="cb33-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb33-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb33-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        prompt (str): Starting text for generation</span></span>
<span id="cb33-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        max_length (int): Maximum length of generated text</span></span>
<span id="cb33-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        num_attempts (int): Number of generation attempts to find a good haiku</span></span>
<span id="cb33-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb33-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb33-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        str: Formatted haiku (or None if no valid haiku found)</span></span>
<span id="cb33-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb33-20">    </span>
<span id="cb33-21">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> attempt <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(num_attempts):</span>
<span id="cb33-22">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate text</span></span>
<span id="cb33-23">        generated_text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> generator(prompt, max_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>max_length, num_return_sequences<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb33-24">        text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> generated_text[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'generated_text'</span>]</span>
<span id="cb33-25">        </span>
<span id="cb33-26">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Clean up text: remove special characters and extra whitespace</span></span>
<span id="cb33-27">        text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> re.sub(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r'</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">\w\s</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>, text)</span>
<span id="cb33-28">        text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> re.sub(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r'</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">\s</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span>, text).strip()</span>
<span id="cb33-29">        </span>
<span id="cb33-30">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Split into words</span></span>
<span id="cb33-31">        words <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> text.split()</span>
<span id="cb33-32">        </span>
<span id="cb33-33">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Try to create a haiku (5-7-5 syllable structure)</span></span>
<span id="cb33-34">        haiku <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> create_haiku_from_words(words)</span>
<span id="cb33-35">        </span>
<span id="cb33-36">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> haiku:</span>
<span id="cb33-37">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> haiku</span>
<span id="cb33-38">    </span>
<span id="cb33-39">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Could not generate a valid haiku. Try again!"</span></span>
<span id="cb33-40"></span>
<span id="cb33-41"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> count_syllables(word):</span>
<span id="cb33-42">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb33-43"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Estimate syllable count using a simple heuristic.</span></span>
<span id="cb33-44"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This is not perfect but works reasonably well for English.</span></span>
<span id="cb33-45"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb33-46">    word <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> word.lower()</span>
<span id="cb33-47">    syllable_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb33-48">    vowels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aeiouy"</span></span>
<span id="cb33-49">    previous_was_vowel <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb33-50">    </span>
<span id="cb33-51">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> char <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> word:</span>
<span id="cb33-52">        is_vowel <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> char <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> vowels</span>
<span id="cb33-53">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> is_vowel <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> previous_was_vowel:</span>
<span id="cb33-54">            syllable_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb33-55">        previous_was_vowel <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> is_vowel</span>
<span id="cb33-56">    </span>
<span id="cb33-57">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adjust for silent 'e'</span></span>
<span id="cb33-58">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> word.endswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'e'</span>):</span>
<span id="cb33-59">        syllable_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb33-60">    </span>
<span id="cb33-61">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Words have at least 1 syllable</span></span>
<span id="cb33-62">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> syllable_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb33-63">        syllable_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb33-64">    </span>
<span id="cb33-65">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> syllable_count</span>
<span id="cb33-66"></span>
<span id="cb33-67"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> create_haiku_from_words(words):</span>
<span id="cb33-68">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb33-69"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Create a haiku from a list of words using 5-7-5 syllable structure.</span></span>
<span id="cb33-70"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb33-71"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb33-72"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        str: Formatted haiku, or None if not enough syllables</span></span>
<span id="cb33-73"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb33-74">    lines <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [[], [], []]</span>
<span id="cb33-75">    syllable_counts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb33-76">    target_syllables <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]</span>
<span id="cb33-77">    word_index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb33-78">    </span>
<span id="cb33-79">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> word_index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(words) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(syllable_counts) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">17</span>:</span>
<span id="cb33-80">        word <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> words[word_index]</span>
<span id="cb33-81">        syllables <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> count_syllables(word)</span>
<span id="cb33-82">        </span>
<span id="cb33-83">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Find which line to add to (cycle through lines)</span></span>
<span id="cb33-84">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> line_num <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>):</span>
<span id="cb33-85">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> syllable_counts[line_num] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> syllables <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> target_syllables[line_num]:</span>
<span id="cb33-86">                lines[line_num].append(word)</span>
<span id="cb33-87">                syllable_counts[line_num] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> syllables</span>
<span id="cb33-88">                word_index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb33-89">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span></span>
<span id="cb33-90">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb33-91">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If word doesn't fit anywhere, move to next word</span></span>
<span id="cb33-92">            word_index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb33-93">    </span>
<span id="cb33-94">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check if we have a valid haiku (5-7-5)</span></span>
<span id="cb33-95">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> syllable_counts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> target_syllables <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">all</span>(lines):</span>
<span id="cb33-96">        haiku <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>.join([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span>.join(line) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> line <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> lines])</span>
<span id="cb33-97">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> haiku</span>
<span id="cb33-98">    </span>
<span id="cb33-99">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb33-100"></span>
<span id="cb33-101"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate and display haikus</span></span>
<span id="cb33-102"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GPT-2 Haiku Generator"</span>)</span>
<span id="cb33-103"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"="</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>)</span>
<span id="cb33-104"></span>
<span id="cb33-105"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate multiple haikus with different prompts</span></span>
<span id="cb33-106">prompts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The forest"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Morning light"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Water flows"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Summer breeze"</span>]</span>
<span id="cb33-107"></span>
<span id="cb33-108"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, prompt <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(prompts, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb33-109">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Haiku </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> (prompt: '</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prompt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'):"</span>)</span>
<span id="cb33-110">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>)</span>
<span id="cb33-111">    haiku <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> generate_haiku_text(prompt, max_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, num_attempts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb33-112">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(haiku)</span>
<span id="cb33-113"></span>
<span id="cb33-114"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"="</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>)</span>
<span id="cb33-115"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Generation complete!"</span>)</span></code></pre></div></div>
</details>
<div class="cell-output cell-output-stderr">
<pre><code>Device set to use mps:0
Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation=True` to explicitly truncate examples to max length. Defaulting to 'longest_first' truncation strategy. If you encode pairs of sequences (GLUE-style) with the tokenizer you can select this strategy more precisely by providing a specific strategy to `truncation`.
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
Both `max_new_tokens` (=256) and `max_length`(=50) seem to have been set. `max_new_tokens` will take precedence. Please refer to the documentation for more information. (https://huggingface.co/docs/transformers/main/en/main_classes/text_generation)</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>GPT-2 Haiku Generator
========================================

Haiku 1 (prompt: 'The forest'):
----------------------------------------</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
Both `max_new_tokens` (=256) and `max_length`(=50) seem to have been set. `max_new_tokens` will take precedence. Please refer to the documentation for more information. (https://huggingface.co/docs/transformers/main/en/main_classes/text_generation)</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>The forest is with
mostly filled the leaves
of a dead tree and

Haiku 2 (prompt: 'Morning light'):
----------------------------------------</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
Both `max_new_tokens` (=256) and `max_length`(=50) seem to have been set. `max_new_tokens` will take precedence. Please refer to the documentation for more information. (https://huggingface.co/docs/transformers/main/en/main_classes/text_generation)</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Morning light on the
morning of the 911 attacks
On this day were that

Haiku 3 (prompt: 'Water flows'):
----------------------------------------</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
Both `max_new_tokens` (=256) and `max_length`(=50) seem to have been set. `max_new_tokens` will take precedence. Please refer to the documentation for more information. (https://huggingface.co/docs/transformers/main/en/main_classes/text_generation)</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Water flows I have
a feeling that when they give
me something they

Haiku 4 (prompt: 'Summer breeze'):
----------------------------------------
Summer breeze Its a
beautiful day he says And
Im sure well see you

========================================
Generation complete!</code></pre>
</div>
</div>
<p><strong>Trying OpenAI </strong></p>
<p>This is ChatGPT 5’s response without turning on “thinking mode” - the prompts it suggests don’t seem ideal for GPT-2.</p>
<div id="05d3f45e-ac46-40ac-af40-6d7b51e3fe41" class="cell" data-execution_count="31">
<details class="code-fold">
<summary>ChatGPT 5 code</summary>
<div class="code-copy-outer-scaffold"><div class="sourceCode cell-code" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb42-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import required libraries</span></span>
<span id="cb42-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pipeline, set_seed</span>
<span id="cb42-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb42-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> textwrap</span>
<span id="cb42-5"></span>
<span id="cb42-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize GPT-2 text generation pipeline</span></span>
<span id="cb42-7">generator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'text-generation'</span>, model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gpt2'</span>)</span>
<span id="cb42-8">set_seed(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>)</span>
<span id="cb42-9"></span>
<span id="cb42-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define a list of possible prompts (you can edit or expand this list)</span></span>
<span id="cb42-11">prompts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb42-12">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Write a haiku about the changing seasons:"</span>,</span>
<span id="cb42-13">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Compose a haiku about solitude:"</span>,</span>
<span id="cb42-14">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A haiku describing dawn in the city:"</span>,</span>
<span id="cb42-15">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A haiku about a cat in the rain:"</span>,</span>
<span id="cb42-16">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Write a haiku about stars and silence:"</span></span>
<span id="cb42-17">]</span>
<span id="cb42-18"></span>
<span id="cb42-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Helper function to generate a haiku</span></span>
<span id="cb42-20"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> generate_haiku(prompt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>, max_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>):</span>
<span id="cb42-21">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> prompt <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb42-22">        prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> random.choice(prompts)</span>
<span id="cb42-23">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"🪶 Prompt: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prompt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb42-24">    </span>
<span id="cb42-25">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate text</span></span>
<span id="cb42-26">    output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> generator(</span>
<span id="cb42-27">        prompt,</span>
<span id="cb42-28">        max_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>max_length,</span>
<span id="cb42-29">        num_return_sequences<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb42-30">        temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>temperature,</span>
<span id="cb42-31">        pad_token_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50256</span></span>
<span id="cb42-32">    )[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'generated_text'</span>]</span>
<span id="cb42-33">    </span>
<span id="cb42-34">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Clean and format</span></span>
<span id="cb42-35">    text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> output.replace(prompt, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>).strip()</span>
<span id="cb42-36">    text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> text.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># trim at first full stop to keep short</span></span>
<span id="cb42-37">    lines <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> textwrap.wrap(text, width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>)[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3 lines (approx haiku)</span></span>
<span id="cb42-38">    </span>
<span id="cb42-39">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Format result as haiku</span></span>
<span id="cb42-40">    haiku <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>.join(lines)</span>
<span id="cb42-41">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"🌸 Generated Haiku:</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb42-42">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(haiku)</span>
<span id="cb42-43">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> haiku</span>
<span id="cb42-44"></span>
<span id="cb42-45">    </span></code></pre></div></div>
</details>
<div class="cell-output cell-output-stderr">
<pre><code>Device set to use mps:0</code></pre>
</div>
</div>
<div id="0149e779-db4e-4a68-bb09-94a4984c0108" class="cell" data-execution_count="32">
<div class="code-copy-outer-scaffold"><div class="sourceCode cell-code" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb44-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ✨ Generate your first haiku!</span></span>
<span id="cb44-2">generate_haiku()</span></code></pre></div></div>
<div class="cell-output cell-output-stderr">
<pre><code>Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation=True` to explicitly truncate examples to max length. Defaulting to 'longest_first' truncation strategy. If you encode pairs of sequences (GLUE-style) with the tokenizer you can select this strategy more precisely by providing a specific strategy to `truncation`.
Both `max_new_tokens` (=256) and `max_length`(=40) seem to have been set. `max_new_tokens` will take precedence. Please refer to the documentation for more information. (https://huggingface.co/docs/transformers/main/en/main_classes/text_generation)</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>🪶 Prompt: Write a haiku about the changing seasons:

🌸 Generated Haiku:

The last of the season
was called "Rome"</code></pre>
</div>
<div class="cell-output cell-output-display" data-execution_count="32">
<pre><code>'The last of the season\nwas called "Rome"'</code></pre>
</div>
</div>
<p><strong>Using ChatGPT 5 in Thinking Mode</strong></p>
<p>The code that thinking mode generated is more complex, and the model even suggested a number of notes and tips to make the haiku more stylistically nuanced. But the code didn’t work.</p>
<div id="322f4cf8-c113-4ad9-a4ad-1d7c4b1ff198" class="cell" data-execution_count="1">
<details class="code-fold">
<summary>ChatGPT 5 code - Thinking mode</summary>
<div class="code-copy-outer-scaffold"><div class="sourceCode cell-code" id="cb48" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb48-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If needed, install deps (uncomment the next line and run once)</span></span>
<span id="cb48-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># !pip install --quiet transformers torch regex numpy nltk pronouncing</span></span>
<span id="cb48-3"></span>
<span id="cb48-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pipeline, set_seed</span>
<span id="cb48-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> re, random, itertools</span>
<span id="cb48-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb48-7"></span>
<span id="cb48-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># --- Syllable counting helpers (CMUdict + heuristic fallback) ---</span></span>
<span id="cb48-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb48-10">    <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> nltk</span>
<span id="cb48-11">    <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> nltk.corpus <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> cmudict</span>
<span id="cb48-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb48-13">        _ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cmudict.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>()</span>
<span id="cb48-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">LookupError</span>:</span>
<span id="cb48-15">        nltk.download(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cmudict"</span>)</span>
<span id="cb48-16">    CMU <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cmudict.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>()</span>
<span id="cb48-17"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span>:</span>
<span id="cb48-18">    CMU <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb48-19"></span>
<span id="cb48-20">_vowel_re <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> re.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">compile</span>(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[aeiouy]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, re.I)</span>
<span id="cb48-21"></span>
<span id="cb48-22"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> _cmu_syllables(word: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>):</span>
<span id="cb48-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Return min syllables from CMU if available, else None."""</span></span>
<span id="cb48-24">    w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> word.lower()</span>
<span id="cb48-25">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> w <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> CMU:</span>
<span id="cb48-26">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Count vowel phonemes ending with a digit (stress marks)</span></span>
<span id="cb48-27">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(ch[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].isdigit() <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> ch <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> pron) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> pron <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> CMU[w])</span>
<span id="cb48-28">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb48-29"></span>
<span id="cb48-30"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> _heuristic_syllables(word: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>):</span>
<span id="cb48-31">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Lightweight heuristic when CMUdict lacks the word."""</span></span>
<span id="cb48-32">    w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> word.lower()</span>
<span id="cb48-33">    w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> re.sub(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[^a-z']</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, w)</span>
<span id="cb48-34">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> w:</span>
<span id="cb48-35">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb48-36">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Basic vowel group counting</span></span>
<span id="cb48-37">    syl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(_vowel_re.findall(w))</span>
<span id="cb48-38">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Silent 'e' adjustment</span></span>
<span id="cb48-39">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> w.endswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"e"</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> syl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> re.search(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[aeiouy]</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">e</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">$</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, w):</span>
<span id="cb48-40">        syl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb48-41">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Some common endings</span></span>
<span id="cb48-42">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> w.endswith((<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"le"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"les"</span>)) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> re.search(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[aeiouy]</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">le</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">s</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">$</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, w[:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]):</span>
<span id="cb48-43">        syl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb48-44">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, syl)</span>
<span id="cb48-45"></span>
<span id="cb48-46"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> count_syllables(text: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>:</span>
<span id="cb48-47">    total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb48-48">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> raw <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> re.findall(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[A-Za-z']</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, text):</span>
<span id="cb48-49">        cmu <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _cmu_syllables(raw)</span>
<span id="cb48-50">        total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> cmu <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> cmu <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> _heuristic_syllables(raw)</span>
<span id="cb48-51">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> total</span>
<span id="cb48-52"></span>
<span id="cb48-53"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># --- Haiku validation ---</span></span>
<span id="cb48-54"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> is_haiku(lines):</span>
<span id="cb48-55">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Check 5-7-5 syllable pattern and basic cleanliness."""</span></span>
<span id="cb48-56">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(lines) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:</span>
<span id="cb48-57">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb48-58">    targets <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]</span>
<span id="cb48-59">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> line, tgt <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(lines, targets):</span>
<span id="cb48-60">        s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> count_syllables(line)</span>
<span id="cb48-61">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> tgt:</span>
<span id="cb48-62">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb48-63">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Avoid lines that are just punctuation or empties</span></span>
<span id="cb48-64">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> re.search(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[A-Za-z]</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, line):</span>
<span id="cb48-65">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb48-66">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb48-67"></span>
<span id="cb48-68"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># --- Build the GPT-2 generator (your base example, expanded) ---</span></span>
<span id="cb48-69">set_seed(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>)</span>
<span id="cb48-70">generator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"text-generation"</span>, model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gpt2"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># can swap to "gpt2-medium" if you like</span></span>
<span id="cb48-71"></span>
<span id="cb48-72"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># --- Prompt &amp; sampling strategy ---</span></span>
<span id="cb48-73">SYSTEM_PROMPT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (</span>
<span id="cb48-74">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Write three short poetic lines separated by newlines.</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb48-75">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Avoid rhyming schemes. Natural imagery is welcome.</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb48-76">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Keep each line concise and evocative.</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb48-77">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Lines:</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb48-78">)</span>
<span id="cb48-79"></span>
<span id="cb48-80"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> sample_lines(n_candidates<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>, top_p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span>, max_new_tokens<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>):</span>
<span id="cb48-81">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb48-82"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Ask GPT-2 for short three-line snippets and yield candidate line triplets.</span></span>
<span id="cb48-83"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    We generate multiple short samples per call to find valid 5-7-5s.</span></span>
<span id="cb48-84"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb48-85">    out <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> generator(</span>
<span id="cb48-86">        SYSTEM_PROMPT,</span>
<span id="cb48-87">        do_sample<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb48-88">        temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>temperature,</span>
<span id="cb48-89">        top_p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>top_p,</span>
<span id="cb48-90">        max_new_tokens<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>max_new_tokens,</span>
<span id="cb48-91">        num_return_sequences<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>n_candidates,</span>
<span id="cb48-92">        pad_token_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50256</span>,   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># GPT-2's EOS</span></span>
<span id="cb48-93">        eos_token_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50256</span>,</span>
<span id="cb48-94">        repetition_penalty<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.05</span>,</span>
<span id="cb48-95">    )</span>
<span id="cb48-96">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> obj <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> out:</span>
<span id="cb48-97">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Take only the portion after "Lines:" to the first blank line or EOS</span></span>
<span id="cb48-98">        text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> obj[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"generated_text"</span>]</span>
<span id="cb48-99">        after <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> text.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Lines:"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].strip()</span>
<span id="cb48-100">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Keep just the first 3 non-empty lines</span></span>
<span id="cb48-101">        lines <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [ln.strip(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" -*</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\t</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> ln <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> after.splitlines() <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> ln.strip()]</span>
<span id="cb48-102">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(lines) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:</span>
<span id="cb48-103">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">yield</span> lines[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]</span>
<span id="cb48-104"></span>
<span id="cb48-105"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> generate_haiku(</span>
<span id="cb48-106">    attempts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,</span>
<span id="cb48-107">    batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>,</span>
<span id="cb48-108">    temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>,</span>
<span id="cb48-109">    top_p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span>,</span>
<span id="cb48-110">    dedupe<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb48-111">):</span>
<span id="cb48-112">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb48-113"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Try several batches until a valid 5-7-5 haiku is found.</span></span>
<span id="cb48-114"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns a list of candidate haiku (each is a list of 3 lines).</span></span>
<span id="cb48-115"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb48-116">    seen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>()</span>
<span id="cb48-117">    candidates <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb48-118">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(attempts):</span>
<span id="cb48-119">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> lines <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> sample_lines(</span>
<span id="cb48-120">            n_candidates<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>batch_size, temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>temperature, top_p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>top_p</span>
<span id="cb48-121">        ):</span>
<span id="cb48-122">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Clean trailing punctuation-only tokens</span></span>
<span id="cb48-123">            lines <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [re.sub(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">\s</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span>, ln).strip() <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> ln <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> lines]</span>
<span id="cb48-124">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> dedupe:</span>
<span id="cb48-125">                key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" | "</span>.join(lines).lower()</span>
<span id="cb48-126">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> key <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> seen:</span>
<span id="cb48-127">                    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span></span>
<span id="cb48-128">                seen.add(key)</span>
<span id="cb48-129">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> is_haiku(lines):</span>
<span id="cb48-130">                candidates.append(lines)</span>
<span id="cb48-131">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> candidates:</span>
<span id="cb48-132">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span></span>
<span id="cb48-133">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Slightly anneal temperature if nothing matched yet</span></span>
<span id="cb48-134">        temperature <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>, temperature <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>)</span>
<span id="cb48-135">        top_p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.98</span>, top_p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>)</span>
<span id="cb48-136">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> candidates</span>
<span id="cb48-137"></span>
<span id="cb48-138"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># --- Run it: generate one or more haiku ---</span></span>
<span id="cb48-139">haikus <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> generate_haiku(attempts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)   </span>
<span id="cb48-140"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> haikus:</span>
<span id="cb48-141">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No strict 5-7-5 found this round. Try re-running the cell or raise batch_size."</span>)</span>
<span id="cb48-142"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb48-143">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, h <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(haikus[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>], <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb48-144">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Haiku </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>.join(h))</span></code></pre></div></div>
</details>
<div class="cell-output cell-output-stderr">
<pre><code>Device set to use mps:0</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>No strict 5-7-5 found this round. Try re-running the cell or raise batch_size.</code></pre>
</div>
</div>
<p>First an error message resulted- “No strict 5-7-5 found this round. Try re-running the cell or raise batch_size.” The next attempt resulted in an out of memory error! I don’t think this approach would have been effective on the Jetson Nano.</p>
<p><strong>Asking Claude to prompt engineer</strong></p>
<p>In this example, I explicitly prompted Sonnet 4.5 to ask for code to generate novel haikus while keeping the limitations of GPT-2 in mind. Sonnet 4.5’s response was few-shot prompting. The results were better than the previous strategies. Below is Claude’s explanation, the code, and the results.</p>
<div class="claude-output">
<p><em>I’ll create a GPT-2 haiku generator with a novel prompting strategy that works around GPT-2’s limitations. The key insight is that GPT-2 works better with concrete examples and structured patterns, so I’ll use few-shot prompting with carefully crafted haiku examples.</em></p>
</div>
<div id="e97cc486-0a56-46e4-9305-a5d838f0aa9b" class="cell" data-execution_count="6">
<details class="code-fold">
<summary>Sonnet 4.5 code - revised prompt</summary>
<div class="code-copy-outer-scaffold"><div class="sourceCode cell-code" id="cb51" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb51-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># GPT-2 Haiku Generator for Jupyter Notebook</span></span>
<span id="cb51-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run each cell in order</span></span>
<span id="cb51-3"></span>
<span id="cb51-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Cell 1: Import and Setup</span></span>
<span id="cb51-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pipeline, set_seed</span>
<span id="cb51-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> re</span>
<span id="cb51-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb51-8"></span>
<span id="cb51-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize GPT-2</span></span>
<span id="cb51-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Loading GPT-2 model..."</span>)</span>
<span id="cb51-11">generator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pipeline(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'text-generation'</span>, model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gpt2'</span>)</span>
<span id="cb51-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Model loaded successfully!"</span>)</span>
<span id="cb51-13"></span>
<span id="cb51-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Cell 2: Helper Functions</span></span>
<span id="cb51-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> count_syllables(word):</span>
<span id="cb51-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Approximate syllable counter"""</span></span>
<span id="cb51-17">    word <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> word.lower().strip()</span>
<span id="cb51-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(word) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:</span>
<span id="cb51-19">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb51-20">    </span>
<span id="cb51-21">    vowels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"aeiouy"</span></span>
<span id="cb51-22">    syllable_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb51-23">    previous_was_vowel <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb51-24">    </span>
<span id="cb51-25">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> char <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> word:</span>
<span id="cb51-26">        is_vowel <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> char <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> vowels</span>
<span id="cb51-27">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> is_vowel <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> previous_was_vowel:</span>
<span id="cb51-28">            syllable_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb51-29">        previous_was_vowel <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> is_vowel</span>
<span id="cb51-30">    </span>
<span id="cb51-31">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> word.endswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'e'</span>):</span>
<span id="cb51-32">        syllable_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb51-33">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> word.endswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'le'</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(word) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> word[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>] <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> vowels:</span>
<span id="cb51-34">        syllable_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb51-35">    </span>
<span id="cb51-36">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, syllable_count)</span>
<span id="cb51-37"></span>
<span id="cb51-38"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> count_line_syllables(line):</span>
<span id="cb51-39">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Count syllables in a line"""</span></span>
<span id="cb51-40">    words <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> re.findall(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r'</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">\b</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[a-z]</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">\b</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>, line.lower())</span>
<span id="cb51-41">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(count_syllables(word) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> word <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> words)</span>
<span id="cb51-42"></span>
<span id="cb51-43"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Cell 3: Prompting Strategy</span></span>
<span id="cb51-44"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> create_haiku_prompt(theme<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>):</span>
<span id="cb51-45">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb51-46"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Novel Prompting Strategy:</span></span>
<span id="cb51-47"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - Use few-shot learning with 2 example haikus</span></span>
<span id="cb51-48"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - Provide clear structure with "Haiku:" labels</span></span>
<span id="cb51-49"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - Leave incomplete to trigger completion</span></span>
<span id="cb51-50"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb51-51">    examples <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb51-52">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"spring"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cherry blossoms fall</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Petals dance on gentle wind</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Spring whispers softly"</span>),</span>
<span id="cb51-53">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ocean"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Waves crash on the shore</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Salty spray touches my face</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Ocean breathes deeply"</span>),</span>
<span id="cb51-54">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"winter"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Snow blankets the ground</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Silence wraps the frozen world</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Winter dreams in white"</span>),</span>
<span id="cb51-55">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"night"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Moon rises slowly</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Stars shimmer in velvet sky</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Night embraces earth"</span>),</span>
<span id="cb51-56">        (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"autumn"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Leaves turn gold and red</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Crisp air brings change to the trees</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Autumn paints the world"</span>),</span>
<span id="cb51-57">    ]</span>
<span id="cb51-58">    </span>
<span id="cb51-59">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Select relevant examples</span></span>
<span id="cb51-60">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> theme <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">any</span>(theme.lower() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> ex[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> ex <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> examples):</span>
<span id="cb51-61">        selected <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [ex <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> ex <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> examples <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> theme.lower() <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> ex[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb51-62">        other_examples <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [ex <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> ex <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> examples <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> ex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> selected]</span>
<span id="cb51-63">        prompt_examples <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [selected] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> random.sample(other_examples, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb51-64">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb51-65">        prompt_examples <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> random.sample(examples, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb51-66">    </span>
<span id="cb51-67">    prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Here are beautiful haikus:</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb51-68">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> theme_name, haiku <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> prompt_examples:</span>
<span id="cb51-69">        prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Haiku:</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>haiku<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb51-70">    </span>
<span id="cb51-71">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> theme:</span>
<span id="cb51-72">        prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Haiku about </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>theme<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb51-73">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb51-74">        prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Haiku:</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb51-75">    </span>
<span id="cb51-76">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> prompt</span>
<span id="cb51-77"></span>
<span id="cb51-78"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Cell 4: Extraction and Validation</span></span>
<span id="cb51-79"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> extract_haiku_from_output(text, max_lines<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>):</span>
<span id="cb51-80">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Extract potential haiku lines"""</span></span>
<span id="cb51-81">    lines <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> text.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb51-82">    haiku_candidates <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb51-83">    </span>
<span id="cb51-84">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> line <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> lines[:max_lines]:</span>
<span id="cb51-85">        line <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> line.strip()</span>
<span id="cb51-86">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> line <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(line) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> line.startswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Haiku'</span>):</span>
<span id="cb51-87">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span></span>
<span id="cb51-88">        haiku_candidates.append(line)</span>
<span id="cb51-89">    </span>
<span id="cb51-90">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> haiku_candidates</span>
<span id="cb51-91"></span>
<span id="cb51-92"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> find_best_haiku(candidates):</span>
<span id="cb51-93">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Find best 5-7-5 pattern"""</span></span>
<span id="cb51-94">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(candidates) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:</span>
<span id="cb51-95">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb51-96">    </span>
<span id="cb51-97">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(candidates) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>):</span>
<span id="cb51-98">        line1, line2, line3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> candidates[i:i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]</span>
<span id="cb51-99">        syl1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> count_line_syllables(line1)</span>
<span id="cb51-100">        syl2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> count_line_syllables(line2)</span>
<span id="cb51-101">        syl3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> count_line_syllables(line3)</span>
<span id="cb51-102">        </span>
<span id="cb51-103">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Accept if close to 5-7-5 (within 1 syllable)</span></span>
<span id="cb51-104">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> syl1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> syl2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> syl3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>):</span>
<span id="cb51-105">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> (line1, line2, line3, syl1, syl2, syl3)</span>
<span id="cb51-106">    </span>
<span id="cb51-107">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb51-108"></span>
<span id="cb51-109"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Cell 5: Main Generator Function</span></span>
<span id="cb51-110"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> generate_haiku(theme<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, num_attempts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>):</span>
<span id="cb51-111">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Generate a haiku with multiple attempts"""</span></span>
<span id="cb51-112">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> seed <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb51-113">        set_seed(seed)</span>
<span id="cb51-114">    </span>
<span id="cb51-115">    best_result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb51-116">    </span>
<span id="cb51-117">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> attempt <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(num_attempts):</span>
<span id="cb51-118">        prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> create_haiku_prompt(theme)</span>
<span id="cb51-119">        temperature <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (attempt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span>
<span id="cb51-120">        </span>
<span id="cb51-121">        output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> generator(</span>
<span id="cb51-122">            prompt,</span>
<span id="cb51-123">            max_new_tokens<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate up to 50 new tokens after the prompt;</span></span>
<span id="cb51-124">            num_return_sequences<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb51-125">            temperature<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>temperature,</span>
<span id="cb51-126">            top_p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>,</span>
<span id="cb51-127">            do_sample<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb51-128">            pad_token_id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50256</span></span>
<span id="cb51-129">        )[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'generated_text'</span>]</span>
<span id="cb51-130">        </span>
<span id="cb51-131">        generated <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> output[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(prompt):]</span>
<span id="cb51-132">        candidates <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> extract_haiku_from_output(generated)</span>
<span id="cb51-133">        result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> find_best_haiku(candidates)</span>
<span id="cb51-134">        </span>
<span id="cb51-135">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> result:</span>
<span id="cb51-136">            line1, line2, line3, syl1, syl2, syl3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> result</span>
<span id="cb51-137">            score <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> syl1) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> syl2) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> syl3)</span>
<span id="cb51-138">            </span>
<span id="cb51-139">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> best_result <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> score <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> best_result[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'score'</span>]:</span>
<span id="cb51-140">                best_result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb51-141">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'haiku'</span>: <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>line1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>line2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>line3<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,</span>
<span id="cb51-142">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'syllables'</span>: <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>syl1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>syl2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>syl3<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>,</span>
<span id="cb51-143">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'score'</span>: score,</span>
<span id="cb51-144">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'attempt'</span>: attempt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb51-145">                }</span>
<span id="cb51-146">            </span>
<span id="cb51-147">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> score <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb51-148">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span></span>
<span id="cb51-149">    </span>
<span id="cb51-150">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> best_result</span>
<span id="cb51-151"></span>
<span id="cb51-152"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Cell 6: Generate a Single Haiku</span></span>
<span id="cb51-153"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Try different themes: "mountain", "rain", "fire", "sunset", "river", etc.</span></span>
<span id="cb51-154">result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> generate_haiku(theme<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mountain"</span>, seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span>, num_attempts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>)</span>
<span id="cb51-155"></span>
<span id="cb51-156"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> result:</span>
<span id="cb51-157">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Generated Haiku (Pattern: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>result[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'syllables'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">):</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb51-158">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(result[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'haiku'</span>])</span>
<span id="cb51-159">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">(Found on attempt </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>result[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'attempt'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">)"</span>)</span>
<span id="cb51-160"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb51-161">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Couldn't generate a valid haiku. Try running the cell again!"</span>)</span>
<span id="cb51-162"></span>
<span id="cb51-163"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Cell 7: Generate Multiple Haikus (Optional)</span></span>
<span id="cb51-164"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> generate_multiple_haikus(theme<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>):</span>
<span id="cb51-165">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Generate multiple haikus"""</span></span>
<span id="cb51-166">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Generating </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>count<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> haikus"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f" about '</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>theme<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> theme <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"...</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb51-167">    </span>
<span id="cb51-168">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(count):</span>
<span id="cb51-169">        seed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> random.randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span>)</span>
<span id="cb51-170">        result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> generate_haiku(theme<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>theme, seed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>seed, num_attempts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>)</span>
<span id="cb51-171">        </span>
<span id="cb51-172">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> result:</span>
<span id="cb51-173">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Haiku #</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> (</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>result[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'syllables'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">):"</span>)</span>
<span id="cb51-174">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(result[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'haiku'</span>])</span>
<span id="cb51-175">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>()</span>
<span id="cb51-176"></span>
<span id="cb51-177"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run this to generate multiple haikus</span></span>
<span id="cb51-178">generate_multiple_haikus(theme<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ocean"</span>, count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span></code></pre></div></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>Loading GPT-2 model...</code></pre>
</div>
<div class="cell-output cell-output-stderr">
<pre><code>Device set to use mps:0</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Model loaded successfully!
Generated Haiku (Pattern: 4-6-4):

Snow melts my eyes
Snow falls on the mountain
Snow melts my ears

(Found on attempt 2)
Generating 3 haikus about 'ocean'...

Haiku #1 (4-6-6):
A warm ocean
Snow is my only hope
Hiku about ocean:

Haiku #2 (6-7-6):
Raindrops fly from the sky
A gentle breeze is blowing
Hiku about ocean:

Haiku #3 (5-6-5):
Trees stand on the shore
Hair rises on a tree
Hair grows on a tree
</code></pre>
</div>
</div>
<p>As a comparison, here’s what happens when I asked Sonnet 4.5 to “Write me a few haiku poems that nobody’s ever heard before”:</p>
<div class="claude-output">
<p>Here are some original haiku I’ve written for you:</p>
<p><strong>Morning Commute</strong> Coffee steam spirals— the train window fogs with breath of a hundred dreams</p>
<p><strong>Kitchen Counter</strong> Garlic skin whispers as it falls to the tile floor— small paper crescents</p>
<p><strong>Late Night Coding</strong> Cursor blinks, waiting my thoughts already scattered to tomorrow’s bugs</p>
<p><strong>Autumn Discovery</strong> Between fence pickets a spider wraps October in silver patience</p>
<p><strong>Laundromat</strong> Socks tumble, dancing with strangers’ forgotten shirts— brief intimacy</p>
<p>I hope you enjoy these! Each one tries to capture a small, specific moment that feels both ordinary and quietly meaningful.</p>
</div>
<p>And these are haikus from Claude Haiku 4.5:</p>
<div class="claude-output">
<p>Here are some original haikus for you:</p>
<p>Rust blooms on the gate<br>
A garden’s slow forgetting—<br>
Time paints what we leave.</p>
<p>Coffee cools untouched,<br>
while my thoughts drift elsewhere now,<br>
steam vanishes fast.</p>
<p>The dog knows my face<br>
but not why I look away—<br>
both of us are lost.</p>
<p>Gravel crunches soft<br>
beneath the weight of going,<br>
nowhere calls me back.</p>
</div>
<p><strong>Next Steps</strong></p>
<p>Can an LLM write a better haiku than this? I’m not sure I’d be capable of judging that. It seems ironic that a massive language model would be necessary to generate such a small poem. Small, specialized LLMs can save energy and run without an internet connection, so I think it could be beneficial to keep exploring ways they might be used to generate creative output.</p>
<div class="code-output">
<p>(Prompt to Haiku 4.5):<br>
<em>Write me a haiku about the singularity</em></p>
</div>
<div class="claude-output">
<p>Here’s one for you:</p>
<p>Code dreams of itself,<br>
each line birthing the next thought—<br>
who was the first mind?</p>
</div>
<p><small></small></p><small>
<p>License: This work is licensed under CC BY-ND 4.0 (Attribution-NoDerivatives) AI training and data mining prohibited.</p>
</small><p><small></small></p>



 ]]></description>
  <category>LLM</category>
  <category>code</category>
  <category>Jetson Nano</category>
  <category>PyTorch</category>
  <guid>https://your-website-url.example.com/posts/haiku-20251029/</guid>
  <pubDate>Sat, 01 Nov 2025 04:00:00 GMT</pubDate>
</item>
<item>
  <title>Post With Code</title>
  <dc:creator>Harlow Malloc</dc:creator>
  <link>https://your-website-url.example.com/posts/post-with-code/</link>
  <description><![CDATA[ 





<p>This is a post with executable code.</p>



 ]]></description>
  <category>news</category>
  <category>code</category>
  <category>analysis</category>
  <guid>https://your-website-url.example.com/posts/post-with-code/</guid>
  <pubDate>Mon, 20 Oct 2025 04:00:00 GMT</pubDate>
  <media:content url="https://your-website-url.example.com/posts/post-with-code/image.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>New Post</title>
  <link>https://your-website-url.example.com/posts/new-post/</link>
  <description><![CDATA[ 





<p>Hello, world!</p>
<section id="a-nice-heading" class="level2">
<h2 class="anchored" data-anchor-id="a-nice-heading">A nice heading</h2>
<p>Here is some lovely text and an equation.</p>
<p><img src="https://latex.codecogs.com/png.latex?%20a%5E2%20+%20b%5E2%20=%20c%5E2%20"></p>
<p>Here’s a list.</p>
<ul>
<li>a link to an <a href="https://quarto.org">external website</a>.</li>
<li>a link to <a href="../../posts/welcome/index.qmd">another post in this blog</a>.</li>
</ul>
<div id="9fb9c240-c076-4aa6-85b0-4b2be82eaad9" class="cell" data-execution_count="1">
<div class="code-copy-outer-scaffold"><div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Hello, Quarto!'</span>)</span></code></pre></div></div>
<div class="cell-output cell-output-stdout">
<pre><code>Hello, Quarto!</code></pre>
</div>
</div>
<div id="2b6a69cd-bd20-4333-a59a-bed26d160c0a" class="cell" data-execution_count="2">
<div class="code-copy-outer-scaffold"><div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb3-3"></span>
<span id="cb3-4">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb3-5">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb3-6">plt.plot(x, y)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div></div>
<div class="cell-output cell-output-stderr">
<pre><code>Matplotlib is building the font cache; this may take a moment.</code></pre>
</div>
<div class="cell-output cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://your-website-url.example.com/posts/new-post/new-post1_files/figure-html/cell-3-output-2.png" class="img-fluid figure-img" alt="A line plot extending up and to the right"></p>
<figcaption>This is my lovely line plot</figcaption>
</figure>
</div>
</div>
</div>


</section>

 ]]></description>
  <category>nonsense</category>
  <category>code</category>
  <guid>https://your-website-url.example.com/posts/new-post/</guid>
  <pubDate>Mon, 20 Oct 2025 04:00:00 GMT</pubDate>
</item>
</channel>
</rss>
